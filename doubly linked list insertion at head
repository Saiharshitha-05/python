
class Node:
    def _init_(self, data):
        self.data = data
        self.next = None 
        self.prev = None 
 
def printLeftToRightManner(head):
    print("Left to Right")
    curr = head 
    while curr != None:
        print(curr.data, end = " --> ")
        curr = curr.next 
    print()
 
def printRightToLeftManner(tail):
    print("Right to Left")
    tail = head 
    while tail.next != None:
        tail = tail.next 
    curr = tail
    while curr != None:
        print(curr.data, end = " --> ")
        curr = curr.prev 
    print()

def addNodeAtHeadOfLinkedList(head, val):
    newBlock = Node(val)
    if head == None:
        return newBlock
    # 11 --> 22 --> 33 --> None 
    # newBlock = 10
    # head = 11 
    newBlock.next = head 
    head.prev = newBlock 
    return newBlock
l = [11, 22, 33, 44, 55, 66, 77]
newEle = int(input())
head = None 
for ele in l:
    head = addNodeAtHeadOfLinkedList(head, ele)
head = addNodeAtHeadOfLinkedList(head, newEle)
printLeftToRightManner(head)
printRightToLeftManner(head)
